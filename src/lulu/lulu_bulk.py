############################
#
#       Lulu scraper
#
#            by
# 
#     Code Monkey King
#
############################

############################
#
#  Just paste this file's 
# content into scrapy shell
#
############################

# write emty file with column names
import json, csv; open('lulu.csv', 'w').write('title,price,thumbnail_url,image_url,DP Type,Brand,Content,Type\n')

# single page scrapers
# fetch categories (just append new categories below via copy-pasting line & changing URL)
import json, csv; open('lulu.csv', 'w').write('title,price,thumbnail_url,image_url,DP Type,Brand,Content,Type\n')
(fetch('https://www.luluhypermarket.in/en-in/sauces-pickles-food-cupboard-grocery/c/HY00214940'), [(fetch('https://www.luluhypermarket.in' + url), [csv.DictWriter(open('lulu.csv', 'a'), ['title', 'price', 'thumbnail_url', 'image_url', 'DP Type', 'Brand', 'Content', 'Type']).writerow({'title': response.css('h1[class="pdp-productname"]::text').get(), 'price': 'INR ' + response.css('div[class="prod-price"]').css('span::text').getall()[-1], 'thumbnail_url': 'https://www.luluhypermarket.in' + response.css('span[class="thumbnail"]').css('img::attr(src)').get(), 'image_url': 'https://www.luluhypermarket.in' + response.css('div[class="item active"]').css('img::attr(src)').get(), 'DP Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[0].strip(), 'Brand': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[1].strip(), 'Content': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-2].strip(), 'Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-1].strip()}) for index in range(0, 1) if len(response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-5 col-xs-6"]::text').getall()) > 1]) for url in response.css('a[class="js-gtm-product-link"]::attr(href)').getall()])
(fetch('https://www.luluhypermarket.in/en-in/cooking-ingredients-food-cupboard-grocery/c/HY00214934?q=%3Arelevance&page=9'), [(fetch('https://www.luluhypermarket.in' + url), [csv.DictWriter(open('lulu.csv', 'a'), ['title', 'price', 'thumbnail_url', 'image_url', 'DP Type', 'Brand', 'Content', 'Type']).writerow({'title': response.css('h1[class="pdp-productname"]::text').get(), 'price': 'INR ' + response.css('div[class="prod-price"]').css('span::text').getall()[-1], 'thumbnail_url': 'https://www.luluhypermarket.in' + response.css('span[class="thumbnail"]').css('img::attr(src)').get(), 'image_url': 'https://www.luluhypermarket.in' + response.css('div[class="item active"]').css('img::attr(src)').get(), 'DP Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[0].strip(), 'Brand': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[1].strip(), 'Content': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-2].strip(), 'Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-1].strip()}) for index in range(0, 1) if len(response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-5 col-xs-6"]::text').getall()) > 1]) for url in response.css('a[class="js-gtm-product-link"]::attr(href)').getall()])
(fetch('https://www.luluhypermarket.in/en-in/rice-pasta-noodles-food-cupboard-grocery/c/HY00214987'), [(fetch('https://www.luluhypermarket.in' + url), [csv.DictWriter(open('lulu.csv', 'a'), ['title', 'price', 'thumbnail_url', 'image_url', 'DP Type', 'Brand', 'Content', 'Type']).writerow({'title': response.css('h1[class="pdp-productname"]::text').get(), 'price': 'INR ' + response.css('div[class="prod-price"]').css('span::text').getall()[-1], 'thumbnail_url': 'https://www.luluhypermarket.in' + response.css('span[class="thumbnail"]').css('img::attr(src)').get(), 'image_url': 'https://www.luluhypermarket.in' + response.css('div[class="item active"]').css('img::attr(src)').get(), 'DP Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[0].strip(), 'Brand': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[1].strip(), 'Content': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-2].strip(), 'Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-1].strip()}) for index in range(0, 1) if len(response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-5 col-xs-6"]::text').getall()) > 1]) for url in response.css('a[class="js-gtm-product-link"]::attr(href)').getall()])

# multiple page scrapers (edit page range at the end of the line)
[(fetch('https://www.luluhypermarket.in/en-in/food-cupboard-grocery/c/HY002148000?q=%3Arelevance&page=' + str(page)), [(fetch('https://www.luluhypermarket.in' + url), [csv.DictWriter(open('lulu.csv', 'a'), ['title', 'price', 'thumbnail_url', 'image_url', 'DP Type', 'Brand', 'Content', 'Type']).writerow({'title': response.css('h1[class="pdp-productname"]::text').get(), 'price': 'INR ' + response.css('div[class="prod-price"]').css('span::text').getall()[-1], 'thumbnail_url': 'https://www.luluhypermarket.in' + response.css('span[class="thumbnail"]').css('img::attr(src)').get(), 'image_url': 'https://www.luluhypermarket.in' + response.css('div[class="item active"]').css('img::attr(src)').get(), 'DP Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[0].strip(), 'Brand': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[1].strip(), 'Content': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-2].strip(), 'Type': response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-7 col-xs-6"]::text').getall()[-1].strip()}) for index in range(0, 1) if len(response.css('div[class="features-ul"]').css('p[class="col-md-5 col-sm-5 col-xs-6"]::text').getall()) > 1]) for url in response.css('a[class="js-gtm-product-link"]::attr(href)').getall()]) for page in range(1, 11)]

